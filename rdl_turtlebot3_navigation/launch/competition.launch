<?xml version="1.0"?>
<launch>

  <!-- Robot Design Lab final competition launch file -->

  <!-- ::: parameters ::: -->
    <arg name="gazebo_gui" default="true"/>
    <arg name="x_pos" default="0.0"/>
    <arg name="y_pos" default="-0.5"/>

    <arg name="dwa_loop_rate" default="1.0" />
    <arg name="distance_between_wheels" default="0.16"/>
    <arg name="wheel_diameter" default="0.066" />

    <arg name="world_name" default="final_competition"/>
    <arg name="robot_model" default="joint_ctrl_burger"/>

  <!-- ::: bringup ::: -->

    <!-- bringup a localised robot in simulation -->
    <include file="$(find rdl_turtlebot3_bringup_sim)/launch/robot.launch">
        <arg name="gazebo_gui" value="$(arg gazebo_gui)" />
        <arg name="x_pos" value="$(arg x_pos)" />
        <arg name="y_pos" value="$(arg y_pos)" />
        <arg name="world_name" default="$(arg world_name)"/>
        <arg name="model" default="$(arg robot_model)"/>
    </include>

  <!-- ::: localisation ::: -->

    <!-- Occupancy query server node -->
    <node pkg="amr_mapping" type="occupancy_query_server" name="occupancy_query_server" output="screen" required="true"/>

    <!-- Pose likelihood server node -->
    <node pkg="amr_localization" type="pose_likelihood_server" name="pose_likelihood_server" output="screen" required="true"/>

    <!-- particle filter -->
    <node pkg="rdl_turtlebot3_navigation" type="localisation.py" name="localisation" output="screen" required="true"/>

  <!-- ::: global planner ::: -->
    
    <!-- path planning (ws3, task1) -->
    <node pkg="rdl_turtlebot3_navigation" type="path_planning.py" name="global_planner" output="screen" required="true"/>

    <!-- we use the costmaps from move base... -->
    <!-- run move base but disable its connection with rviz (remap /move_base_simple/goal to dumy topic) -->
    <include file="$(find rdl_turtlebot3_navigation)/launch/move_base.launch">
        <arg name="simple_goal_topic" value="dumy" />
    </include>

    <!-- subscribe to /move_base_simple/goal (rviz way of giving goals) and call srv to make plan -->
    <!-- NOTE: use this node for debugging purposes only, you can't give a nav goal in the final competition -->
    <node pkg="rdl_turtlebot3_navigation" type="goal_handler.py" name="goal_handler" output="screen">
        <param name="path_planning_srv_name" value="/robot_design_lab/make_plan" />
    </node>

  <!-- ::: local planner ::: -->
    
    <!-- dwa local planner, follow global plan locally -->
    <node pkg="rdl_turtlebot3_navigation" type="dwa_local_planner.py" name="rdl_dwa_local_planner" output="screen" required="true">
        <param name="loop_rate" value="$(arg dwa_loop_rate)"/>
        <param name="distance_between_wheels" value="$(arg distance_between_wheels)"/>
        <param name="wheel_diameter"  value="$(arg wheel_diameter)"/>
    </node>

  <!-- ::: obstacle detection based on image processing ::: -->

    <!-- object detection -->
    <include file="$(find rdl_rgb_obstacle_detection)/launch/obstacle_detection.launch" />

    <!-- object localisation, NOTE: replace object_localisation.py with your node name -->
    <!--<node pkg="rdl_rgb_obstacle_detection" type="object_localisation.py" name="object_localisation" output="screen" />-->

    <!-- add rgb obstacles to costmap -->
    <!--<node pkg="rdl_rgb_obstacle_detection" type="rgb_obstacle_costmap.py" name="rgb_obstacle_costmap" output="screen" />-->

</launch>
