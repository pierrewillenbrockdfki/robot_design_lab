#!/usr/bin/env python
PACKAGE = "rdl_rgb_obstacle_detection"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("obs_h_hi",    int_t,    0, "Maximum h component of obstacle pixel", 255,  0, 255)
gen.add("obs_h_lo",    int_t,    0, "Minimum h component of obstacle pixel", 0,  0, 255)
gen.add("obs_s_hi",    int_t,    0, "Maximum s component of obstacle pixel", 52,  0, 255)
gen.add("obs_s_lo",    int_t,    0, "Minimum s component of obstacle pixel", 0,  0, 255)
gen.add("obs_v_hi",    int_t,    0, "Maximum v component of obstacle pixel", 255,  0, 255)
gen.add("obs_v_lo",    int_t,    0, "Minimum v component of obstacle pixel", 0,  0, 255)
gen.add("goal_left_h_hi",    int_t,    0, "Maximum h component of left goal pixel", 130,  0, 255)
gen.add("goal_left_h_lo",    int_t,    0, "Minimum h component of left goal pixel", 80,  0, 255)
gen.add("goal_left_s_hi",    int_t,    0, "Maximum s component of left goal pixel", 255,  0, 255)
gen.add("goal_left_s_lo",    int_t,    0, "Minimum s component of left goal pixel", 66,  0, 255)
gen.add("goal_left_v_hi",    int_t,    0, "Maximum v component of left goal pixel", 255,  0, 255)
gen.add("goal_left_v_lo",    int_t,    0, "Minimum v component of left goal pixel", 42,  0, 255)
gen.add("goal_right_h_hi",    int_t,    0, "Maximum h component of right goal pixel", 255,  0, 255)
gen.add("goal_right_h_lo",    int_t,    0, "Minimum h component of right goal pixel", 254,  0, 255)
gen.add("goal_right_s_hi",    int_t,    0, "Maximum s component of right goal pixel", 255,  0, 255)
gen.add("goal_right_s_lo",    int_t,    0, "Minimum s component of right goal pixel", 255,  0, 255)
gen.add("goal_right_v_hi",    int_t,    0, "Maximum v component of right goal pixel", 255,  0, 255)
gen.add("goal_right_v_lo",    int_t,    0, "Minimum v component of right goal pixel", 255,  0, 255)

gen.add("binarization_threshold",    int_t,    0, "Threshold for binarisation", 63,  0, 255)

gen.add("debug",   bool_t,   0, "Enable debug images",  True)

exit(gen.generate(PACKAGE, "rdl_rgb_obstacle_detection", "rdl_rgb_obstacle_detection"))
